{"version":3,"sources":["components/Header.js","components/TableList.js","config/secureAxios.js","components/InfoStats.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","FormControl","Select","variant","onChange","onCountryChange","value","country","MenuItem","countries","map","index","name","TableList","cases","secureAxios","axios","create","baseURL","InfoStats","title","total","Card","CardContent","Typography","color","App","useState","setCountries","setCountry","countryInfo","setCountryInfo","tableData","setTableData","useEffect","then","res","data","countriesData","iso2","sortedData","sort","a","b","get","event","countryCode","target","url","todayCases","todayRecovered","recovered","todayDeaths","deaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c0790c1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\nimport \"./Header.css\"\r\n\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className=\"header\">\r\n        <h2>COVID-19 TRACKER</h2>\r\n        <FormControl className=\"header__dropdown\">\r\n          <Select\r\n            variant=\"outlined\"\r\n            onChange={props.onCountryChange}\r\n            value={props.country}\r\n          >\r\n            <MenuItem value={props.country}>Worldwide</MenuItem>\r\n            {props.countries.map((country,index) => {\r\n              return <MenuItem key={index} value={country.value}>{country.name}</MenuItem>;\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport \"./TableList.css\";\r\nfunction TableList({ countries }) {\r\n  return (\r\n    <div className=\"tableList\">\r\n      {countries.map((country) => {\r\n        return (\r\n          <tr>\r\n            <td>{country.country}</td>\r\n            <td>\r\n              <strong>{country.cases}</strong>\r\n            </td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableList;\r\n","import axios from 'axios'\r\n\r\nconst secureAxios = axios.create({\r\n    baseURL:\"https://disease.sh/v3/covid-19\"\r\n})\r\n\r\nexport default secureAxios","import React from \"react\";\r\nimport \"./InfoStats.css\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nfunction InfoStats({ title, cases, total }) {\r\n  return (\r\n    <div>\r\n      <Card className=\"infoStats\">\r\n        <CardContent>\r\n          <Typography className=\"infoStats__title\" color=\"textSecondary\">\r\n            {title}\r\n          </Typography>\r\n          <h2 className=\"infoStats__cases\">{cases}</h2>\r\n          <Typography className=\"infoStats__total\" color=\"textSecondary\">\r\n            {total} total\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoStats;\r\n","import { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport TableList from \"./components/TableList\";\nimport secureAxios from \"./config/secureAxios\";\nimport \"./App.css\";\nimport InfoStats from \"./components/InfoStats\";\nimport { Card, CardContent } from \"@material-ui/core\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    secureAxios(\"/countries\")\n      .then((res) => res.data)\n      .then((data) => {\n        const countriesData = data.map((country) => {\n          return {\n            name: country.country,\n            value: country.countryInfo.iso2,\n          };\n        });\n\n        const sortedData = [...data];\n        sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\n        setCountries(countriesData);\n        setTableData(sortedData);\n      });\n  }, []);\n\n  useEffect(() => {\n    secureAxios\n      .get(\"/all\")\n      .then((res) => res.data)\n      .then((data) => setCountryInfo(data));\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    const url =\n      country === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `/countries/${countryCode}`;\n    await secureAxios\n      .get(url)\n      .then((res) => res.data)\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n      });\n  };\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <Header\n          countries={countries}\n          onCountryChange={onCountryChange}\n          country={country}\n        />\n\n        <div className=\"app__stats\">\n          <InfoStats\n            title=\"Coronavirus Cases\"\n            cases={countryInfo.todayCases}\n            total={countryInfo.cases}\n          />\n          <InfoStats\n            title=\"Recovered\"\n            cases={countryInfo.todayRecovered}\n            total={countryInfo.recovered}\n          />\n          <InfoStats\n            title=\"Deaths\"\n            cases={countryInfo.todayDeaths}\n            total={countryInfo.deaths}\n          />\n        </div>\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <TableList countries={tableData} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}